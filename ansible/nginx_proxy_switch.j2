user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

stream {
    log_format stream_log '$remote_addr [$time_local] '
                          '$protocol $status $bytes_sent $bytes_received '
                          '$session_time "$ssl_preread_server_name"';

    map $ssl_preread_server_name $name {
        default terminate_tls;
        old.{{ domain_name }}   old_website;
        {{ domain_name }}       new_website;
        www.{{ domain_name }}   new_website;
        new.{{ domain_name }}   new_website;
        api.{{ domain_name }}   new_website;
        db.{{ domain_name }}    new_website;
        idp.{{ domain_name }}   new_website;
        trainplanner.{{ domain_name }}      new_website;
        trainplannerapi.{{ domain_name }}   new_website;
    }

    upstream old_website {
        server 10.100.0.11:443;
    }

    upstream new_website {
        server 10.100.0.15:443;
    }

    upstream terminate_tls {
        server 127.0.0.1:8443;
    }

    server {
        listen 10.100.0.13:443;
        proxy_pass $name;
        ssl_preread on;
        access_log /var/log/nginx/stream_access.log stream_log;
    }
}

http {
    log_format tls_terminate_log '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" '
                               '"$host"';

    map $host $backend_upstream {
        old.{{ domain_name }}   10.100.0.11;
        {{ domain_name }}       10.100.0.15;
        www.{{ domain_name }}   10.100.0.15;
        new.{{ domain_name }}   10.100.0.15;
        api.{{ domain_name }}   10.100.0.15;
        db.{{ domain_name }}    10.100.0.15;
        idp.{{ domain_name }}   10.100.0.15;
        trainplanner.{{ domain_name }}      10.100.0.15;
        trainplannerapi.{{ domain_name }}   10.100.0.15;
    }

    server {
        listen 8443 ssl;
        ssl_certificate /home/{{ ansible_user }}/ssl_cert/fullchain.pem;
        ssl_certificate_key /home/{{ ansible_user }}/ssl_cert/privkey.pem;
        access_log /var/log/nginx/tls_terminate_access.log tls_terminate_log;

        if ($host = "") {
            return 400 "Missing Host header";
        }

        location / {
            proxy_pass https://$backend_upstream;
            # proxy_set_header Host $host;
            proxy_ssl_server_name on;
        }
    }

    server {
        listen 80;
        access_log /var/log/nginx/http_access.log tls_terminate_log;

        if ($host = "") {
            return 400 "Missing Host header";
        }

        location ^~ / {
            proxy_pass http://$backend_upstream;
            # proxy_set_header Host $host;
        }
    }
}
