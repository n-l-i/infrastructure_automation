---
- name: Ensure SSH server is enabled
  block:
  - name: Ensure SSH server is enabled on Linux systems
    when: ansible_os_family == "Debian" or ansible_os_family == "Archlinux"
    ansible.builtin.systemd_service:
      name: >-
        {{
          'ssh' if ansible_os_family == 'Debian' else
          'sshd' if ansible_os_family == 'Archlinux' else
          'unknown'
        }}
      enabled: true
    become: true

  - name: Ensure SSH server is enabled on FreeBSD systems
    when: ansible_os_family == "FreeBSD"
    ansible.builtin.lineinfile:
      path: /etc/rc.conf
      regexp: '^sshd_enable='
      line: sshd_enable="YES"
    become: true

- name: Ensure user SSH directory exists
  ansible.builtin.file:
    path: /home/serveruser/.ssh
    state: directory
    owner: serveruser
    group: serveruser
    mode: '0700'
  become: true

- name: Ensure our SSH key is an authorized key
  ansible.builtin.lineinfile:
    path: /home/serveruser/.ssh/authorized_keys
    regexp: ' {{ lookup("env", "SSH_KEY_NAME") }}$'
    line: '{{ lookup("file", "../secrets/id_ed25519.pub").splitlines()[0] }}'
    create: yes

- name: Ensure authorized_keys has correct permissions
  ansible.builtin.file:
    path: /home/serveruser/.ssh/authorized_keys
    owner: serveruser
    group: serveruser
    mode: '0600'

- name: Ensure user is unlocked and passwordless
  when: ansible_os_family != "FreeBSD"
  block:
  - name: Determine user passwd status
    ansible.builtin.command:
      cmd: grep -o "^serveruser:." /etc/shadow
    register: user_status
    changed_when: false
    become: true

  - name: Delete user password and unlock user
    when: user_status.stdout != "serveruser::"
    ansible.builtin.command:
      cmd: passwd -d serveruser
    changed_when: true
    become: true

- name: Ensure SSH server config file is updated
  block:
  - name: Stat the existing sshd_config file
    ansible.builtin.stat:
      path: /etc/ssh/sshd_config
    register: sshd_config_stat

  - name: Assert sshd_config file exists
    ansible.builtin.assert:
      that:
        - sshd_config_stat.stat.exists
      fail_msg: "sshd_config file is missing!"
      success_msg: "sshd_config file exists."

  - name: Ensure SSH server config file on host is updated
    ansible.builtin.template:
      src: ../sshd_config.j2
      dest: /etc/ssh/sshd_config
      owner: "{{ sshd_config_stat.stat.pw_name }}"
      group: "{{ sshd_config_stat.stat.gr_name }}"
      mode: "0644"
    become: true
    vars:
      admin_username: '{{ lookup("env", "ADMIN_USERNAME") }}'
      admin_username_local: '{{ lookup("env", "ADMIN_USERNAME_LOCAL") }}'
    notify: Restart SSH server

- meta: flush_handlers
